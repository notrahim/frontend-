{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Techdotpk/Desktop/app/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Techdotpk/Desktop/app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nexport default {\n  props: ['date', 'fetchData'],\n  data: function data() {\n    return {\n      datesArray: [],\n      monthArray: [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\", \"Juin\", \"Juillet\", \"Août\", \"Septembre\", \"Octobre\", \"Novembre\", \"Décembre\"],\n      pickerYear: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substring(0, 4),\n      pickerDate: \"\",\n      selectedItem: \"\"\n    };\n  },\n  computed: {\n    deadline: function deadline() {\n      var lastday = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n      return lastday.toISOString();\n    },\n    today: function today() {\n      var firstday = new Date(date.getFullYear(), date.getMonth(), 1);\n      return firstday.toISOString();\n    }\n  },\n  mounted: function mounted() {\n    this.calendar();\n    this.pickerDate = this.date;\n    this.selectedItem = parseInt(this.date.substring(5, 2)) - 1;\n  },\n  methods: {\n    calendar: function calendar() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.eventsObjects = _this.fetchData.map(function (value) {\n                  return {\n                    date: value.day,\n                    event: value.company + \" : \" + value.task\n                  };\n                }); // this.datesArray = this.eventsObjects.filter((value) => this.today < value.date  && value.date < this.deadline )\n\n                _this.datesArray = _this.eventsObjects.filter(function (value) {\n                  return value.date;\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    updateMonth: function updateMonth(month) {\n      var monthNumber = this.monthArray.indexOf(month) + 1;\n      var tmp = this.pickerYear + \"-\" + monthNumber.toString();\n      this.pickerDate = tmp;\n      this.updateDate();\n    },\n    updateYear: function updateYear(nb) {\n      var yearInt = parseInt(this.pickerYear);\n\n      if (nb == 1) {\n        yearInt = yearInt - 1;\n      } else {\n        yearInt = yearInt + 1;\n      }\n\n      this.pickerYear = yearInt.toString();\n      this.pickerDate = this.pickerDate.replace(this.pickerDate.substring(0, 4), this.pickerYear);\n      this.updateDate();\n    },\n    updateDate: function updateDate() {\n      this.$emit(\"change-picker-date\", this.pickerDate);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAmDA;EACAA,4BADA;EAEAC;IAAA;MACAC,cADA;MAEAC,aACA,SADA,EAEA,SAFA,EAGA,MAHA,EAIA,OAJA,EAKA,KALA,EAMA,MANA,EAOA,SAPA,EAQA,MARA,EASA,WATA,EAUA,SAVA,EAWA,UAXA,EAYA,UAZA,CAFA;MAgBAC,0EACAC,WADA,GAEAC,SAFA,CAEA,CAFA,EAEA,CAFA,CAhBA;MAmBAC,cAnBA;MAoBAC;IApBA;EAAA,CAFA;EAwBAC;IACAC,QADA,sBACA;MACA;MAEA;IACA,CALA;IAMAC,KANA,mBAMA;MACA;MACA;IACA;EATA,CAxBA;EAmCAC,OAnCA,qBAmCA;IACA;IACA;IACA;EACA,CAvCA;EAwCAC;IACAC,QADA,sBACA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBACA;kBACA;oBACAC,eADA;oBAEAC;kBAFA;gBAIA,CALA,EADA,CAOA;;gBACA;kBAAA;gBAAA;;cARA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IASA,CAVA;IAWAC,WAXA,uBAWAC,KAXA,EAWA;MACA;MACA;MACA;MACA;IACA,CAhBA;IAiBAC,UAjBA,sBAiBAC,EAjBA,EAiBA;MACA;;MACA;QACAC;MACA,CAFA,MAEA;QACAA;MACA;;MACA;MACA,0CACA,+BADA,EAEA,eAFA;MAIA;IACA,CA9BA;IA+BAC,UA/BA,wBA+BA;MACA;IACA;EAjCA;AAxCA","names":["props","data","datesArray","monthArray","pickerYear","toISOString","substring","pickerDate","selectedItem","computed","deadline","today","mounted","methods","calendar","date","event","updateMonth","month","updateYear","nb","yearInt","updateDate"],"sourceRoot":"src/components/widget/Calendar","sources":["CalendarSidebar.vue"],"sourcesContent":["<template>\n  <v-card elevation=\"0\">\n    <div class=\"d-flex justify-center align-center mb-2 year-card\">\n      <v-btn icon @click=\"updateYear(1)\">\n        <v-icon color=\"secondary\">mdi-chevron-left</v-icon>\n      </v-btn>\n      <span class=\"font-weight-bold\" v-text=\"pickerYear\"></span>\n      <v-btn icon @click=\"updateYear(2)\">\n        <v-icon color=\"secondary\">mdi-chevron-right</v-icon>\n      </v-btn>\n    </div>\n    <v-item-group v-model=\"selectedItem\" mandatory>\n      <div v-for=\"month in monthArray\" :key=\"month\">\n        <v-item v-slot=\"{ active, toggle }\">\n          <v-card\n            tile\n            elevation=\"0\"\n            @click=\"\n              toggle();\n              updateMonth(month);\n            \"\n            :ripple=\"false\"\n          >\n            <v-card-text\n              :class=\"\n                active\n                  ? 'py-1 mb-0 font-weight-bold accent--text'\n                  : 'py-1 mb-0 font-weight-bold'\n              \"\n            >\n              <v-row align=\"center\" no-gutters>\n                <v-col cols=\"10\" v-text=\"month\"> </v-col>\n                <v-col cols=\"2\">\n                  <v-badge\n                    color=\"secondary\"\n                    :content=\"datesArray.length\"\n                    inline\n                    class=\"month-badge\"\n                  >\n                  </v-badge>\n                </v-col>\n              </v-row>\n            </v-card-text>\n          </v-card>\n        </v-item>\n      </div>\n    </v-item-group>\n  </v-card>\n</template>\n\n<script>\nexport default {\n  props: ['date' , 'fetchData'],\n  data: () => ({\n    datesArray: [],\n    monthArray: [\n      \"Janvier\",\n      \"Février\",\n      \"Mars\",\n      \"Avril\",\n      \"Mai\",\n      \"Juin\",\n      \"Juillet\",\n      \"Août\",\n      \"Septembre\",\n      \"Octobre\",\n      \"Novembre\",\n      \"Décembre\",\n    ],\n    pickerYear: new Date(Date.now() - new Date().getTimezoneOffset() * 60000)\n      .toISOString()\n      .substring(0, 4),\n    pickerDate: \"\",\n    selectedItem: \"\",\n  }),\n  computed: {\n  deadline() {\n    var lastday = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n    return lastday.toISOString()\n  },\n  today() {\n    var firstday = new Date(date.getFullYear(), date.getMonth(), 1);\n    return firstday.toISOString()\n  }\n}, \n  mounted() {\n    this.calendar()\n    this.pickerDate = this.date;\n    this.selectedItem = parseInt(this.date.substring(5, 2)) - 1;\n  },\n  methods: {\n    async calendar() {\n        this.eventsObjects = this.fetchData.map(function (value) {\n          return {\n            date: value.day,\n            event: value.company + \" : \" + value.task,\n          };\n        });\n        // this.datesArray = this.eventsObjects.filter((value) => this.today < value.date  && value.date < this.deadline )\n        this.datesArray = this.eventsObjects.filter((value) => value.date )\n      },\n    updateMonth(month) {\n      var monthNumber = this.monthArray.indexOf(month) + 1;\n      var tmp = this.pickerYear + \"-\" + monthNumber.toString();\n      this.pickerDate = tmp;\n      this.updateDate();\n    },\n    updateYear(nb) {\n      var yearInt = parseInt(this.pickerYear);\n      if (nb == 1) {\n        yearInt = yearInt - 1;\n      } else {\n        yearInt = yearInt + 1;\n      }\n      this.pickerYear = yearInt.toString();\n      this.pickerDate = this.pickerDate.replace(\n        this.pickerDate.substring(0, 4),\n        this.pickerYear\n      );\n      this.updateDate();\n    },\n    updateDate() {\n      this.$emit(\"change-picker-date\", this.pickerDate);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}